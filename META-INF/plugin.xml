<idea-plugin version="2">
    <id>org.intellij.plugins.ceylon.ide</id>
    <name>Ceylon IDE</name>
    <version>$pluginVersion$</version>
    <vendor email="bastien.jansen [at] gmx.com">Bastien Jansen</vendor>

    <description>Provides support for the Ceylon programming language</description>

    <change-notes>
        See https://github.com/ceylon/ceylon-ide-intellij/wiki/Features
    </change-notes>

    <!-- To be compatible with Android Studio 1.5 -->
    <idea-version since-build="141" until-build="143"/>

    <depends>com.intellij.modules.lang</depends>

    <application-components>
        <component>
            <implementation-class>
                org.intellij.plugins.ceylon.ide.startup.CeylonIdeMetamodelEnricher
            </implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>org.intellij.plugins.ceylon.ide.ceylonCode.model.IdeaCeylonProjects</implementation-class>
        </component>
    </project-components>

    <module-components>
        <component>
            <interface-class>org.intellij.plugins.ceylon.ide.ceylonCode.ITypeCheckerProvider</interface-class>
            <implementation-class>org.intellij.plugins.ceylon.ide.annotator.TypeCheckerProvider</implementation-class>
        </component>
    </module-components>

    <actions>
        <action id="Ceylon.AddCeylonModule" class="org.intellij.plugins.ceylon.ide.action.CeylonAddModuleAction" text="Ceylon _Module" description="Add a new Ceylon module">
            <add-to-group group-id="NewGroup1" anchor="before" relative-to-action="NewModuleInGroup"/>
        </action>
        <action id="Ceylon.AddCeylonPackage" class="org.intellij.plugins.ceylon.ide.action.CeylonAddPackageAction" text="Ceylon _Package" description="Add a new Ceylon package">
            <add-to-group group-id="NewGroup1" anchor="after" relative-to-action="Ceylon.AddCeylonModule"/>
        </action>
        <action id="Ceylon.AddCeylonFile" class="org.intellij.plugins.ceylon.ide.action.CeylonAddFileAction" text="Ceylon _File" description="Add a new Ceylon file">
            <add-to-group group-id="NewGroup1" anchor="after" relative-to-action="Ceylon.AddCeylonPackage"/>
        </action>
        <action id="Ceylon.RefineEqualsHash"
                class="org.intellij.plugins.ceylon.ide.ceylonCode.action.RefineEqualsHashAction"
                text="Refine equals()/hash">
            <add-to-group group-id="GenerateGroup"/>
            <keyboard-shortcut first-keystroke="control shift 2" second-keystroke="H" keymap="$default"/>
        </action>
        <action id="Ceylon.RefineFormalMembers"
                class="org.intellij.plugins.ceylon.ide.ceylonCode.action.RefineFormalMembersAction"
                text="Refine formal members">
            <add-to-group group-id="GenerateGroup"/>
            <keyboard-shortcut first-keystroke="control shift 2" second-keystroke="F" keymap="$default"/>
        </action>
        <action class="org.intellij.plugins.ceylon.ide.action.PasteJavaToCeylonAction" id="Ceylon.PasteAsCeylon" text="Paste Java as Ceylon">
            <add-to-group group-id="CutCopyPasteGroup" anchor="last"/>
        </action>
        <action class="org.intellij.plugins.ceylon.ide.ceylonCode.action.AddBootstrapFilesAction"
                id="AddBootstrapFilesAction"
                text="Create Ceylon Bootstrap Files">
            <add-to-group group-id="ProjectViewPopupMenu"/>
        </action>
        <action id="ParticlesToggleAction"
                class="org.intellij.plugins.ceylon.ide.action.ParticlesToggleAction"
                text="I like ponies"/>
    </actions>

    <!-- These extensions are only here to allow calling our Java code from our Ceylon code :( -->
    <extensionPoints>
        <extensionPoint name="typecheckerInvoker" interface="org.intellij.plugins.ceylon.ide.ceylonCode.ITypeCheckerInvoker"/>
    </extensionPoints>

    <extensions defaultExtensionNs="org.intellij.plugins.ceylon.ide">
        <typecheckerInvoker implementation="org.intellij.plugins.ceylon.ide.annotator.TypeCheckerInvoker"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <ApplicationLoadListener implementation="org.intellij.plugins.ceylon.ide.startup.CeylonIdePlugin"/>
        <lang.documentationProvider implementationClass="org.intellij.plugins.ceylon.ide.doc.CeylonDocProvider" language="Ceylon"/>

        <fileTypeFactory implementation="org.intellij.plugins.ceylon.ide.CeylonFileTypeFactory"/>
        <lang.parserDefinition language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.parser.CeylonParserDefinition"/>

        <lang.syntaxHighlighterFactory key="Ceylon" language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.highlighting.CeylonHighlighterFactory"/>
        <annotator language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.annotator.CeylonSyntaxAnnotator"/>
        <annotator language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.annotator.CeylonTypeCheckerAnnotator"/>
        <problemFileHighlightFilter implementation="org.intellij.plugins.ceylon.ide.highlighting.CeylonFileHighlightFilter"/>
        <colorSettingsPage implementation="org.intellij.plugins.ceylon.ide.highlighting.CeylonColorSettingsPage"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/CeylonDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/CeylonDarcula.xml"/>

        <moduleType id="CEYLON_MODULE" implementationClass="org.intellij.plugins.ceylon.ide.project.CeylonModuleType"/>

        <lang.commenter language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.lang.CeylonCommenter"/>
        <lang.braceMatcher language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.lang.CeylonBraceMatcher"/>
        <quoteHandler fileType="Ceylon" className="org.intellij.plugins.ceylon.ide.lang.CeylonQuoteHandler"/>
        <lang.foldingBuilder language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.lang.CeylonFoldingBuilder"/>
        <lang.formatter language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.formatting.CeylonFormattingModelBuilder"/>
        <lang.psiStructureViewFactory language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.structureView.CeylonStructureViewFactory"/>
        <treeStructureProvider implementation="org.intellij.plugins.ceylon.ide.projectView.ModuleTreeStructureProvider" order="last"/>
        <enterHandlerDelegate implementation="org.intellij.plugins.ceylon.ide.codeInsight.EnterInStringHandler"/>

        <defaultLiveTemplatesProvider implementation="org.intellij.plugins.ceylon.ide.templates.CeylonLiveTemplatesProvider"/>
        <liveTemplateContext implementation="org.intellij.plugins.ceylon.ide.templates.CeylonLiveTemplateContext"/>
        <codeInsight.template.postfixTemplateProvider language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.templates.CeylonPostfixTemplateProvider"/>

        <psi.classFileDecompiler implementation="org.intellij.plugins.ceylon.ide.compiled.CeylonDecompiler"/>
        <stubElementTypeHolder class="org.intellij.plugins.ceylon.ide.ceylonCode.psi.CeylonTypes"/>
        <stubIndex implementation="org.intellij.plugins.ceylon.ide.ceylonCode.psi.stub.ClassIndex"/>
        <!--<stubIndex implementation="org.intellij.plugins.ceylon.psi.stub.ModuleIndex"/>-->

        <gotoClassContributor implementation="org.intellij.plugins.ceylon.ide.codeInsight.navigation.CeylonGotoClassContributor"/>
        <completion.contributor language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.completion.CeylonCompletionContributor"/>
        <codeInsight.parameterInfo language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.completion.CeylonParameterInfoHandler"/>

        <itemPresentationProvider forClass="org.intellij.plugins.ceylon.ide.ceylonCode.psi.CeylonClass"
                                  implementationClass="org.intellij.plugins.ceylon.ide.presentation.ClassPresentationProvider"/>
        <itemPresentationProvider forClass="org.intellij.plugins.ceylon.ide.ceylonCode.psi.impl.DeclarationPsiNameIdOwner"
                                  implementationClass="org.intellij.plugins.ceylon.ide.presentation.DeclarationPresentationProvider"/>
        <itemPresentationProvider forClass="org.intellij.plugins.ceylon.ide.ceylonCode.codeInsight.navigation.DeclarationNavigationItem"
                                  implementationClass="org.intellij.plugins.ceylon.ide.ceylonCode.codeInsight.navigation.DeclarationPresentationProvider"/>
        <moduleRendererFactory implementation="org.intellij.plugins.ceylon.ide.ceylonCode.codeInsight.navigation.DeclarationModuleRendererFactory"/>
        
        <lang.refactoringSupport language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.refactoring.CeylonRefactoringSupportProvider"/>
        <renameHandler implementation="org.intellij.plugins.ceylon.ide.refactoring.CeylonVariableRenameHandler"/>
        <renamePsiElementProcessor implementation="org.intellij.plugins.ceylon.ide.refactoring.CeylonRenamePsiProcessor"/>
        <refactoring.elementListenerProvider implementation="org.intellij.plugins.ceylon.ide.refactoring.CeylonRefactoringListener"/>
        <inlineActionHandler implementation="org.intellij.plugins.ceylon.ide.ceylonCode.refactoring.InlineAction"/>
        <lang.importOptimizer language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.ceylonCode.lang.CeylonImportOptimizer"/>
        <elementDescriptionProvider implementation="org.intellij.plugins.ceylon.ide.ceylonCode.psi.CeylonElementDescriptionProvider"/>
        <iconProvider implementation="org.intellij.plugins.ceylon.ide.presentation.CeylonIconProvider"/>
        <codeInsight.lineMarkerProvider language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.ceylonCode.codeInsight.CeylonLineMarkerProvider"/>
        <lang.smartEnterProcessor language="Ceylon"
                                  implementationClass="org.intellij.plugins.ceylon.ide.ceylonCode.editor.TerminateStatementAction"/>
        <editorTypedHandler order="first" implementationClass="org.intellij.plugins.ceylon.ide.editor.Particles"/>

        <projectStructureDetector implementation="org.intellij.plugins.ceylon.ide.project.CeylonProjectStructureDetector"/>
        <facetType implementation="org.intellij.plugins.ceylon.ide.facet.CeylonFacetType"/>
        <framework.detector implementation="org.intellij.plugins.ceylon.ide.facet.CeylonFacetDetector"/>

        <lang.findUsagesProvider language="Ceylon" implementationClass="org.intellij.plugins.ceylon.ide.codeInsight.resolve.CeylonFindUsagesProvider"/>
        <readWriteAccessDetector implementation="org.intellij.plugins.ceylon.ide.ceylonCode.resolve.CeylonReadWriteAccessDetector"/>
        <usageTypeProvider implementation="org.intellij.plugins.ceylon.ide.ceylonCode.resolve.CeylonUsageTypeProvider"/>
        <lang.elementManipulator forClass="org.intellij.plugins.ceylon.ide.ceylonCode.psi.CeylonPsi$IdentifierPsi"
                                 implementationClass="org.intellij.plugins.ceylon.ide.refactoring.IdentifierElementManipulator"/>
        <definitionsScopedSearch implementation="org.intellij.plugins.ceylon.ide.ceylonCode.resolve.CeylonImplementationsSearch"/>
        <gotoTargetRendererProvider implementation="org.intellij.plugins.ceylon.ide.ceylonCode.resolve.GotoTargetRenderer"/>
        <!--<java.elementFinder implementation="org.intellij.plugins.ceylon.ide.ceylonCode.lightpsi.CeylonElementFinder"/>-->
        <!--<java.shortNamesCache implementation="org.intellij.plugins.ceylon.ide.ceylonCode.lightpsi.CeylonShortNamesCache"/>-->
        <!--<psi.referenceContributor language="Ceylon" implementation="org.intellij.plugins.ceylon.codeInsight.resolve.CeylonReferenceContributor"/>-->
        <!-- TODO <usageTypeProvider implementation=""/>-->

        <buildProcess.parametersProvider
                implementation="org.intellij.plugins.ceylon.ide.build.BuildClasspathProvider"/>
        <compileServer.plugin classpath=""/>
        <compiler.task implementation="org.intellij.plugins.ceylon.ide.build.CeylonBuilder" execute="BEFORE"/>
        <compiler.task implementation="org.intellij.plugins.ceylon.ide.build.CeylonJsBuilder" execute="AFTER"/>

        <!-- Run/Debug -->
        <configurationType implementation="org.intellij.plugins.ceylon.ide.runner.CeylonRunConfigurationType"/>
        <configurationType implementation="org.intellij.plugins.ceylon.ide.runner.CeylonJsRunConfigurationType"/>
        <runConfigurationProducer implementation="org.intellij.plugins.ceylon.ide.runner.CeylonRunConfigurationProducer"/>
        <runConfigurationProducer implementation="org.intellij.plugins.ceylon.ide.runner.CeylonJsRunConfigurationProducer"/>
        <debugger.javaDebugAware implementation="org.intellij.plugins.ceylon.ide.debugger.CeylonDebugAware"/>
        <debugger.positionManagerFactory implementation="org.intellij.plugins.ceylon.ide.debugger.CeylonPositionManagerFactory"/>
        <debugger.nodeRenderer implementation="org.intellij.plugins.ceylon.ide.debugger.CeylonNodeRenderer"/>

        <!-- Settings -->
        <applicationConfigurable groupId="language" displayName="Ceylon" id="preferences.Ceylon"
                                 instance="org.intellij.plugins.ceylon.ide.settings.CeylonConfigurable">
            <configurable displayName="Editor" id="preferences.Ceylon.editor"
                          instance="org.intellij.plugins.ceylon.ide.settings.EditorConfigurable">
                <configurable displayName="Completion" id="preferences.Ceylon.editor.completion"
                              instance="org.intellij.plugins.ceylon.ide.settings.CompletionConfigurable"/>
            </configurable>
        </applicationConfigurable>
        <applicationService serviceImplementation="org.intellij.plugins.ceylon.ide.settings.CompletionSettings"/>
        <applicationService serviceImplementation="org.intellij.plugins.ceylon.ide.settings.CeylonSettings"/>
        <projectConfigurable instance="org.intellij.plugins.ceylon.ide.settings.CompilerConfigurable" id="preferences.Ceylon.compiler"
                             displayName="Ceylon Compiler" parentId="project.propCompiler"/>

        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ConvertThenElseToIfElseIntention</className>
            <category>Ceylon/Control flow</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ConvertIfElseToThenElseIntention</className>
            <category>Ceylon/Control flow</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ChangeToIfIntention</className>
            <category>Ceylon/Control flow</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.AssertExistsDeclarationIntention</className>
            <category>Ceylon/Control flow</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ConvertSwitchToIfIntention</className>
            <category>Ceylon/Control flow</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.SplitIfStatementIntention</className>
            <category>Ceylon/Control flow</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.JoinIfStatementsIntention</className>
            <category>Ceylon/Control flow</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ConvertIfToSwitchIntention</className>
            <category>Ceylon/Control flow</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ReverseOperatorIntention</className>
            <category>Ceylon/Operators</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.InvertOperatorIntention</className>
            <category>Ceylon/Operators</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.SwapBinaryOperandsIntention</className>
            <category>Ceylon/Operators</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ParenthesesIntention</className>
            <category>Ceylon/Operators</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.VerboseRefinementIntention</className>
            <category>Ceylon/Syntax</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ShortcutRefinementIntention</className>
            <category>Ceylon/Syntax</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.IdeaSpecifyTypeIntention</className>
            <category>Ceylon/Syntax</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.AnonymousFunctionIntention</className>
            <category>Ceylon/Syntax</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.DeclarationIntention</className>
            <category>Ceylon/Syntax</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ConvertArgumentBlockIntention</className>
            <category>Ceylon/Syntax</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.FillInArgumentNameIntention</className>
            <category>Ceylon/Syntax</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.AssignToFieldIntention</className>
            <category>Ceylon/Declaration</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ConvertToDefaultConstructorIntention</className>
            <category>Ceylon/Declaration</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ConvertToClassIntention</className>
            <category>Ceylon/Declaration</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.AddAnnotationIntention</className>
            <category>Ceylon/Declaration</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.SplitDeclarationIntention</className>
            <category>Ceylon/Declaration</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.JoinDeclarationIntention</className>
            <category>Ceylon/Declaration</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.AddThrowsAnnotationIntention</className>
            <category>Ceylon/Declaration</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ExpandTypeIntention</className>
            <category>Ceylon/Declaration</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.RefineEqualsHashIntention</className>
            <category>Ceylon/Declaration</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ConvertStringToVerbatimIntention</className>
            <category>Ceylon/String</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ConvertVerbatimToStringIntention</className>
            <category>Ceylon/String</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ConvertToInterpolationIntention</className>
            <category>Ceylon/String</category>
        </intentionAction>
        <intentionAction>
            <className>org.intellij.plugins.ceylon.ide.ceylonCode.correct.ConvertToConcatenationIntention</className>
            <category>Ceylon/String</category>
        </intentionAction>
    </extensions>
</idea-plugin>