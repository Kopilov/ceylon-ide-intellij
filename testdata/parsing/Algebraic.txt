FILE
  COMPILATION_UNIT
    Class Algebraic
      ANNOTATION_LIST
        ANNOTATION
          IDENTIFIER
            PsiElement(LIDENTIFIER)('abstract')
      Class Algebraic
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Algebraic')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        CASE_TYPES
          PsiElement(CASE_TYPES)('of')
          IDENTIFIER
            PsiElement(LIDENTIFIER)('concrete')
          PsiElement(UNION_OP)('|')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Concrete')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class Concrete
      ANNOTATION_LIST
        <empty list>
      Class Concrete
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Concrete')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        EXTENDED_TYPE
          PsiElement(EXTENDS)('extends')
          IDENTIFIER
            PsiElement(UIDENTIFIER)('Algebraic')
          POSITIONAL_ARGUMENT_LIST
            PsiElement(LPAREN)('(')
            PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    OBJECT_DEFINITION
      ANNOTATION_LIST
        <empty list>
      OBJECT_DEFINITION
        PsiElement(OBJECT_DEFINITION)('object')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('concrete')
        EXTENDED_TYPE
          PsiElement(EXTENDS)('extends')
          IDENTIFIER
            PsiElement(UIDENTIFIER)('Algebraic')
          POSITIONAL_ARGUMENT_LIST
            PsiElement(LPAREN)('(')
            PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('algebraic')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Algebraic')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('z')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('z')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                MATCH_CASE
                  EXPRESSION_LIST
                    EXPRESSION
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('concrete')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Concrete')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('enumConstraint')
        TYPE_PARAMETER_LIST
          PsiElement(SMALLER_OP)('<')
          TYPE_PARAMETER_DECLARATION
            IDENTIFIER
              PsiElement(UIDENTIFIER)('T')
          PsiElement(LARGER_OP)('>')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('T')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('t')
          PsiElement(RPAREN)(')')
        TYPE_CONSTRAINT_LIST
          TYPE_CONSTRAINT
            PsiElement(TYPE_CONSTRAINT)('given')
            IDENTIFIER
              PsiElement(UIDENTIFIER)('T')
            CASE_TYPES
              PsiElement(CASE_TYPES)('of')
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('String')
              PsiElement(UNION_OP)('|')
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Integer')
        BLOCK
          PsiElement(LBRACE)('{')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('t')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('String')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                BASE_MEMBER_EXPRESSION
                                  IDENTIFIER
                                    PsiElement(LIDENTIFIER)('t')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Integer')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                QUALIFIED_MEMBER_EXPRESSION
                                  EXPRESSION
                                    PsiElement(LPAREN)('(')
                                    EXPRESSION
                                      QUOTIENT_OP
                                        BASE_MEMBER_EXPRESSION
                                          IDENTIFIER
                                            PsiElement(LIDENTIFIER)('t')
                                        QUOTIENT_OP
                                          PsiElement(QUOTIENT_OP)('/')
                                        FLOAT_LITERAL
                                          PsiElement(FLOAT_LITERAL)('100.0')
                                    PsiElement(RPAREN)(')')
                                  MEMBER_OP
                                    PsiElement(MEMBER_OP)('.')
                                  IDENTIFIER
                                    PsiElement(LIDENTIFIER)('string')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    Class EnumConstraint
      ANNOTATION_LIST
        <empty list>
      Class EnumConstraint
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('EnumConstraint')
        TYPE_PARAMETER_LIST
          PsiElement(SMALLER_OP)('<')
          TYPE_PARAMETER_DECLARATION
            IDENTIFIER
              PsiElement(UIDENTIFIER)('T')
          PsiElement(LARGER_OP)('>')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('T')
              IDENTIFIER
                PsiElement(ELLIPSIS)('...')
                PsiErrorElement:incorrect syntax: extraneous token '...' expecting initial-lowercase identifier
                  <empty list>
                PsiElement(LIDENTIFIER)('ti')
          PsiElement(RPAREN)(')')
        TYPE_CONSTRAINT_LIST
          TYPE_CONSTRAINT
            PsiElement(TYPE_CONSTRAINT)('given')
            IDENTIFIER
              PsiElement(UIDENTIFIER)('T')
            CASE_TYPES
              PsiElement(CASE_TYPES)('of')
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Float')
              PsiElement(UNION_OP)('|')
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Integer')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              <empty list>
            ATTRIBUTE_DECLARATION
              PsiElement(VALUE_MODIFIER)('value')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('ts')
              SPECIFIER_EXPRESSION
                PsiElement(SPECIFY)('=')
                EXPRESSION
                  QUALIFIED_MEMBER_EXPRESSION
                    BASE_MEMBER_EXPRESSION
                      IDENTIFIER
                        PsiElement(LIDENTIFIER)('ti')
                    MEMBER_OP
                      PsiElement(MEMBER_OP)('.')
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('sequence')
              PsiElement(SEMICOLON)(';')
          ATTRIBUTE_GETTER_DEFINITION
            ANNOTATION_LIST
              ANNOTATION
                IDENTIFIER
                  PsiElement(LIDENTIFIER)('shared')
              ANNOTATION
                IDENTIFIER
                  PsiElement(LIDENTIFIER)('actual')
            ATTRIBUTE_GETTER_DEFINITION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('String')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('string')
              BLOCK
                PsiElement(LBRACE)('{')
                SWITCH_STATEMENT
                  SWITCH_CLAUSE
                    PsiElement(SWITCH_CLAUSE)('switch')
                    PsiElement(LPAREN)('(')
                    EXPRESSION
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('ts')
                    PsiElement(RPAREN)(')')
                  SWITCH_CASE_LIST
                    CASE_CLAUSE
                      PsiElement(CASE_CLAUSE)('case')
                      PsiElement(LPAREN)('(')
                      IS_CASE
                        PsiElement(IS_OP)('is')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('Empty')
                      PsiElement(RPAREN)(')')
                      BLOCK
                        PsiElement(LBRACE)('{')
                        EXPRESSION_STATEMENT
                          EXPRESSION
                            INVOCATION_EXPRESSION
                              BASE_MEMBER_EXPRESSION
                                IDENTIFIER
                                  PsiElement(LIDENTIFIER)('print')
                              POSITIONAL_ARGUMENT_LIST
                                PsiElement(LPAREN)('(')
                                SEQUENCED_ARGUMENT
                                  LISTED_ARGUMENT
                                    EXPRESSION
                                      BASE_MEMBER_EXPRESSION
                                        IDENTIFIER
                                          PsiElement(LIDENTIFIER)('ts')
                                PsiElement(RPAREN)(')')
                          PsiElement(SEMICOLON)(';')
                        RETURN
                          PsiElement(RETURN)('return')
                          EXPRESSION
                            STRING_LITERAL
                              PsiElement(STRING_LITERAL)('"empty"')
                        PsiElement(SEMICOLON)(';')
                        PsiElement(RBRACE)('}')
                    CASE_CLAUSE
                      PsiElement(CASE_CLAUSE)('case')
                      PsiElement(LPAREN)('(')
                      IS_CASE
                        PsiElement(IS_OP)('is')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('Sequence')
                          TYPE_ARGUMENT_LIST
                            PsiElement(SMALLER_OP)('<')
                            BASE_TYPE
                              IDENTIFIER
                                PsiElement(UIDENTIFIER)('T')
                            PsiElement(LARGER_OP)('>')
                      PsiElement(RPAREN)(')')
                      BLOCK
                        PsiElement(LBRACE)('{')
                        EXPRESSION_STATEMENT
                          EXPRESSION
                            INVOCATION_EXPRESSION
                              BASE_MEMBER_EXPRESSION
                                IDENTIFIER
                                  PsiElement(LIDENTIFIER)('print')
                              POSITIONAL_ARGUMENT_LIST
                                PsiElement(LPAREN)('(')
                                SEQUENCED_ARGUMENT
                                  LISTED_ARGUMENT
                                    EXPRESSION
                                      BASE_MEMBER_EXPRESSION
                                        IDENTIFIER
                                          PsiElement(LIDENTIFIER)('ts')
                                PsiElement(RPAREN)(')')
                          PsiElement(SEMICOLON)(';')
                        RETURN
                          PsiElement(RETURN)('return')
                          EXPRESSION
                            STRING_LITERAL
                              PsiElement(STRING_LITERAL)('"sequence"')
                        PsiElement(SEMICOLON)(';')
                        PsiElement(RBRACE)('}')
                PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('testEnumConstraints')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          EXPRESSION_STATEMENT
            EXPRESSION
              INVOCATION_EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('enumConstraint')
                POSITIONAL_ARGUMENT_LIST
                  PsiElement(LPAREN)('(')
                  SEQUENCED_ARGUMENT
                    LISTED_ARGUMENT
                      EXPRESSION
                        NATURAL_LITERAL
                          PsiElement(NATURAL_LITERAL)('20')
                  PsiElement(RPAREN)(')')
            PsiElement(SEMICOLON)(';')
          EXPRESSION_STATEMENT
            EXPRESSION
              INVOCATION_EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('enumConstraint')
                POSITIONAL_ARGUMENT_LIST
                  PsiElement(LPAREN)('(')
                  SEQUENCED_ARGUMENT
                    LISTED_ARGUMENT
                      EXPRESSION
                        STRING_LITERAL
                          PsiElement(STRING_LITERAL)('"hello"')
                  PsiElement(RPAREN)(')')
            PsiElement(SEMICOLON)(';')
          EXPRESSION_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            EXPRESSION_STATEMENT
              EXPRESSION
                INVOCATION_EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('enumConstraint')
                  POSITIONAL_ARGUMENT_LIST
                    PsiElement(LPAREN)('(')
                    SEQUENCED_ARGUMENT
                      LISTED_ARGUMENT
                        EXPRESSION
                          FLOAT_LITERAL
                            PsiElement(FLOAT_LITERAL)('1.0')
                    PsiElement(RPAREN)(')')
              PsiElement(SEMICOLON)(';')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              <empty list>
            ATTRIBUTE_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('EnumConstraint')
                TYPE_ARGUMENT_LIST
                  PsiElement(SMALLER_OP)('<')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Integer')
                  PsiElement(LARGER_OP)('>')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('emp')
              SPECIFIER_EXPRESSION
                PsiElement(SPECIFY)('=')
                EXPRESSION
                  INVOCATION_EXPRESSION
                    BASE_TYPE_EXPRESSION
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('EnumConstraint')
                      TYPE_ARGUMENT_LIST
                        PsiElement(SMALLER_OP)('<')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('Integer')
                        PsiElement(LARGER_OP)('>')
                    POSITIONAL_ARGUMENT_LIST
                      PsiElement(LPAREN)('(')
                      PsiElement(RPAREN)(')')
              PsiElement(SEMICOLON)(';')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              <empty list>
            ATTRIBUTE_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('EnumConstraint')
                TYPE_ARGUMENT_LIST
                  PsiElement(SMALLER_OP)('<')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Float')
                  PsiElement(LARGER_OP)('>')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('foo')
              SPECIFIER_EXPRESSION
                PsiElement(SPECIFY)('=')
                EXPRESSION
                  INVOCATION_EXPRESSION
                    BASE_TYPE_EXPRESSION
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('EnumConstraint')
                    POSITIONAL_ARGUMENT_LIST
                      PsiElement(LPAREN)('(')
                      SEQUENCED_ARGUMENT
                        LISTED_ARGUMENT
                          EXPRESSION
                            FLOAT_LITERAL
                              PsiElement(FLOAT_LITERAL)('1.0')
                        PsiElement(COMMA)(',')
                        LISTED_ARGUMENT
                          EXPRESSION
                            FLOAT_LITERAL
                              PsiElement(FLOAT_LITERAL)('2.0')
                      PsiElement(RPAREN)(')')
              PsiElement(SEMICOLON)(';')
          EXPRESSION_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            EXPRESSION_STATEMENT
              EXPRESSION
                INVOCATION_EXPRESSION
                  BASE_TYPE_EXPRESSION
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('EnumConstraint')
                  POSITIONAL_ARGUMENT_LIST
                    PsiElement(LPAREN)('(')
                    SEQUENCED_ARGUMENT
                      LISTED_ARGUMENT
                        EXPRESSION
                          STRING_LITERAL
                            PsiElement(STRING_LITERAL)('"hello"')
                      PsiElement(COMMA)(',')
                      LISTED_ARGUMENT
                        EXPRESSION
                          STRING_LITERAL
                            PsiElement(STRING_LITERAL)('"world"')
                    PsiElement(RPAREN)(')')
              PsiElement(SEMICOLON)(';')
          PsiElement(RBRACE)('}')
    Interface I
      ANNOTATION_LIST
        <empty list>
      Interface I
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('I')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Interface J
      ANNOTATION_LIST
        <empty list>
      Interface J
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('J')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('ij')
        TYPE_PARAMETER_LIST
          PsiElement(SMALLER_OP)('<')
          TYPE_PARAMETER_DECLARATION
            IDENTIFIER
              PsiElement(UIDENTIFIER)('T')
          PsiElement(LARGER_OP)('>')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('T')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('k')
          PsiElement(RPAREN)(')')
        TYPE_CONSTRAINT_LIST
          TYPE_CONSTRAINT
            PsiElement(TYPE_CONSTRAINT)('given')
            IDENTIFIER
              PsiElement(UIDENTIFIER)('T')
            CASE_TYPES
              PsiElement(CASE_TYPES)('of')
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('I')
              PsiElement(UNION_OP)('|')
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('J')
        BLOCK
          PsiElement(LBRACE)('{')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('k')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('I')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('J')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('k')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('I')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('k')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('I')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              ELSE_CLAUSE
                PsiElement(ELSE_CLAUSE)('else')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('testij')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          OBJECT_DEFINITION
            ANNOTATION_LIST
              <empty list>
            OBJECT_DEFINITION
              PsiElement(OBJECT_DEFINITION)('object')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('i')
              SATISFIED_TYPES
                PsiElement(SATISFIES)('satisfies')
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('I')
              CLASS_BODY
                PsiElement(LBRACE)('{')
                PsiElement(RBRACE)('}')
          OBJECT_DEFINITION
            ANNOTATION_LIST
              <empty list>
            OBJECT_DEFINITION
              PsiElement(OBJECT_DEFINITION)('object')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('j')
              SATISFIED_TYPES
                PsiElement(SATISFIES)('satisfies')
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('J')
              CLASS_BODY
                PsiElement(LBRACE)('{')
                PsiElement(RBRACE)('}')
          OBJECT_DEFINITION
            ANNOTATION_LIST
              <empty list>
            OBJECT_DEFINITION
              PsiElement(OBJECT_DEFINITION)('object')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('k')
              SATISFIED_TYPES
                PsiElement(SATISFIES)('satisfies')
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('I')
                PsiElement(INTERSECTION_OP)('&')
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('J')
              CLASS_BODY
                PsiElement(LBRACE)('{')
                PsiElement(RBRACE)('}')
          EXPRESSION_STATEMENT
            EXPRESSION
              INVOCATION_EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('ij')
                POSITIONAL_ARGUMENT_LIST
                  PsiElement(LPAREN)('(')
                  SEQUENCED_ARGUMENT
                    LISTED_ARGUMENT
                      EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('i')
                  PsiElement(RPAREN)(')')
            PsiElement(SEMICOLON)(';')
          EXPRESSION_STATEMENT
            EXPRESSION
              INVOCATION_EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('ij')
                POSITIONAL_ARGUMENT_LIST
                  PsiElement(LPAREN)('(')
                  SEQUENCED_ARGUMENT
                    LISTED_ARGUMENT
                      EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('j')
                  PsiElement(RPAREN)(')')
            PsiElement(SEMICOLON)(';')
          EXPRESSION_STATEMENT
            EXPRESSION
              INVOCATION_EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('ij')
                POSITIONAL_ARGUMENT_LIST
                  PsiElement(LPAREN)('(')
                  SEQUENCED_ARGUMENT
                    LISTED_ARGUMENT
                      EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('k')
                  PsiElement(RPAREN)(')')
            PsiElement(SEMICOLON)(';')
          EXPRESSION_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            EXPRESSION_STATEMENT
              EXPRESSION
                INVOCATION_EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('ij')
                  POSITIONAL_ARGUMENT_LIST
                    PsiElement(LPAREN)('(')
                    SEQUENCED_ARGUMENT
                      LISTED_ARGUMENT
                        EXPRESSION
                          STRING_LITERAL
                            PsiElement(STRING_LITERAL)('"hello"')
                    PsiElement(RPAREN)(')')
              PsiElement(SEMICOLON)(';')
          EXPRESSION_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            EXPRESSION_STATEMENT
              EXPRESSION
                INVOCATION_EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('ij')
                  POSITIONAL_ARGUMENT_LIST
                    PsiElement(LPAREN)('(')
                    SEQUENCED_ARGUMENT
                      LISTED_ARGUMENT
                        EXPRESSION
                          NATURAL_LITERAL
                            PsiElement(NATURAL_LITERAL)('1')
                    PsiElement(RPAREN)(')')
              PsiElement(SEMICOLON)(';')
          PsiElement(RBRACE)('}')
    Class XXX
      ANNOTATION_LIST
        ANNOTATION
          IDENTIFIER
            PsiElement(LIDENTIFIER)('abstract')
      Class XXX
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('XXX')
        TYPE_PARAMETER_LIST
          PsiElement(SMALLER_OP)('<')
          TYPE_PARAMETER_DECLARATION
            TYPE_VARIANCE
              PsiElement(OUT)('out')
            IDENTIFIER
              PsiElement(UIDENTIFIER)('T')
          PsiElement(LARGER_OP)('>')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        CASE_TYPES
          PsiElement(CASE_TYPES)('of')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('YYY')
            TYPE_ARGUMENT_LIST
              PsiElement(SMALLER_OP)('<')
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('T')
              PsiElement(LARGER_OP)('>')
          PsiElement(UNION_OP)('|')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('ZZZ')
            TYPE_ARGUMENT_LIST
              PsiElement(SMALLER_OP)('<')
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('T')
              PsiElement(LARGER_OP)('>')
          PsiElement(UNION_OP)('|')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('WWW')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class YYY
      ANNOTATION_LIST
        <empty list>
      Class YYY
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('YYY')
        TYPE_PARAMETER_LIST
          PsiElement(SMALLER_OP)('<')
          TYPE_PARAMETER_DECLARATION
            TYPE_VARIANCE
              PsiElement(OUT)('out')
            IDENTIFIER
              PsiElement(UIDENTIFIER)('T')
          PsiElement(LARGER_OP)('>')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        EXTENDED_TYPE
          PsiElement(EXTENDS)('extends')
          IDENTIFIER
            PsiElement(UIDENTIFIER)('XXX')
          TYPE_ARGUMENT_LIST
            PsiElement(SMALLER_OP)('<')
            BASE_TYPE
              IDENTIFIER
                PsiElement(UIDENTIFIER)('T')
            PsiElement(LARGER_OP)('>')
          POSITIONAL_ARGUMENT_LIST
            PsiElement(LPAREN)('(')
            PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class ZZZ
      ANNOTATION_LIST
        <empty list>
      Class ZZZ
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('ZZZ')
        TYPE_PARAMETER_LIST
          PsiElement(SMALLER_OP)('<')
          TYPE_PARAMETER_DECLARATION
            TYPE_VARIANCE
              PsiElement(OUT)('out')
            IDENTIFIER
              PsiElement(UIDENTIFIER)('T')
          PsiElement(LARGER_OP)('>')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        EXTENDED_TYPE
          PsiElement(EXTENDS)('extends')
          IDENTIFIER
            PsiElement(UIDENTIFIER)('XXX')
          TYPE_ARGUMENT_LIST
            PsiElement(SMALLER_OP)('<')
            BASE_TYPE
              IDENTIFIER
                PsiElement(UIDENTIFIER)('T')
            PsiElement(LARGER_OP)('>')
          POSITIONAL_ARGUMENT_LIST
            PsiElement(LPAREN)('(')
            PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class WWW
      ANNOTATION_LIST
        <empty list>
      Class WWW
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('WWW')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        EXTENDED_TYPE
          PsiElement(EXTENDS)('extends')
          IDENTIFIER
            PsiElement(UIDENTIFIER)('XXX')
          TYPE_ARGUMENT_LIST
            PsiElement(SMALLER_OP)('<')
            BASE_TYPE
              IDENTIFIER
                PsiElement(UIDENTIFIER)('Bottom')
            PsiElement(LARGER_OP)('>')
          POSITIONAL_ARGUMENT_LIST
            PsiElement(LPAREN)('(')
            PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    OBJECT_DEFINITION
      ANNOTATION_LIST
        <empty list>
      OBJECT_DEFINITION
        PsiElement(OBJECT_DEFINITION)('object')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('yyy')
        EXTENDED_TYPE
          PsiElement(EXTENDS)('extends')
          IDENTIFIER
            PsiElement(UIDENTIFIER)('YYY')
          TYPE_ARGUMENT_LIST
            PsiElement(SMALLER_OP)('<')
            BASE_TYPE
              IDENTIFIER
                PsiElement(UIDENTIFIER)('String')
            PsiElement(LARGER_OP)('>')
          POSITIONAL_ARGUMENT_LIST
            PsiElement(LPAREN)('(')
            PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('switchit')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('XXX')
                TYPE_ARGUMENT_LIST
                  PsiElement(SMALLER_OP)('<')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('String')
                  PsiElement(LARGER_OP)('>')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('x')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('x')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('YYY')
                    TYPE_ARGUMENT_LIST
                      PsiElement(SMALLER_OP)('<')
                      BASE_TYPE
                        IDENTIFIER
                          PsiElement(UIDENTIFIER)('String')
                      PsiElement(LARGER_OP)('>')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                STRING_LITERAL
                                  PsiElement(STRING_LITERAL)('"yyy"')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('ZZZ')
                    TYPE_ARGUMENT_LIST
                      PsiElement(SMALLER_OP)('<')
                      BASE_TYPE
                        IDENTIFIER
                          PsiElement(UIDENTIFIER)('String')
                      PsiElement(LARGER_OP)('>')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                STRING_LITERAL
                                  PsiElement(STRING_LITERAL)('"zzz"')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('WWW')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                STRING_LITERAL
                                  PsiElement(STRING_LITERAL)('"www"')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('x')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('YYY')
                    TYPE_ARGUMENT_LIST
                      PsiElement(SMALLER_OP)('<')
                      BASE_TYPE
                        IDENTIFIER
                          PsiElement(UIDENTIFIER)('String')
                      PsiElement(LARGER_OP)('>')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                STRING_LITERAL
                                  PsiElement(STRING_LITERAL)('"yyy"')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
              ELSE_CLAUSE
                PsiElement(ELSE_CLAUSE)('else')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('x')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('YYY')
                      TYPE_ARGUMENT_LIST
                        PsiElement(SMALLER_OP)('<')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('String')
                        PsiElement(LARGER_OP)('>')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    EXPRESSION_STATEMENT
                      EXPRESSION
                        INVOCATION_EXPRESSION
                          BASE_MEMBER_EXPRESSION
                            IDENTIFIER
                              PsiElement(LIDENTIFIER)('print')
                          POSITIONAL_ARGUMENT_LIST
                            PsiElement(LPAREN)('(')
                            SEQUENCED_ARGUMENT
                              LISTED_ARGUMENT
                                EXPRESSION
                                  STRING_LITERAL
                                    PsiElement(STRING_LITERAL)('"yyy"')
                            PsiElement(RPAREN)(')')
                      PsiElement(SEMICOLON)(';')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('ZZZ')
                      TYPE_ARGUMENT_LIST
                        PsiElement(SMALLER_OP)('<')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('String')
                        PsiElement(LARGER_OP)('>')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    EXPRESSION_STATEMENT
                      EXPRESSION
                        INVOCATION_EXPRESSION
                          BASE_MEMBER_EXPRESSION
                            IDENTIFIER
                              PsiElement(LIDENTIFIER)('print')
                          POSITIONAL_ARGUMENT_LIST
                            PsiElement(LPAREN)('(')
                            SEQUENCED_ARGUMENT
                              LISTED_ARGUMENT
                                EXPRESSION
                                  STRING_LITERAL
                                    PsiElement(STRING_LITERAL)('"zzz"')
                            PsiElement(RPAREN)(')')
                      PsiElement(SEMICOLON)(';')
                    PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('x')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('YYY')
                    TYPE_ARGUMENT_LIST
                      PsiElement(SMALLER_OP)('<')
                      BASE_TYPE
                        IDENTIFIER
                          PsiElement(UIDENTIFIER)('Object')
                      PsiElement(LARGER_OP)('>')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                STRING_LITERAL
                                  PsiElement(STRING_LITERAL)('"yyy"')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('ZZZ')
                    TYPE_ARGUMENT_LIST
                      PsiElement(SMALLER_OP)('<')
                      BASE_TYPE
                        IDENTIFIER
                          PsiElement(UIDENTIFIER)('String')
                      PsiElement(LARGER_OP)('>')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                STRING_LITERAL
                                  PsiElement(STRING_LITERAL)('"zzz"')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('WWW')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                STRING_LITERAL
                                  PsiElement(STRING_LITERAL)('"www"')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('x')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('YYY')
                      TYPE_ARGUMENT_LIST
                        PsiElement(SMALLER_OP)('<')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('Bottom')
                        PsiElement(LARGER_OP)('>')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    EXPRESSION_STATEMENT
                      EXPRESSION
                        INVOCATION_EXPRESSION
                          BASE_MEMBER_EXPRESSION
                            IDENTIFIER
                              PsiElement(LIDENTIFIER)('print')
                          POSITIONAL_ARGUMENT_LIST
                            PsiElement(LPAREN)('(')
                            SEQUENCED_ARGUMENT
                              LISTED_ARGUMENT
                                EXPRESSION
                                  STRING_LITERAL
                                    PsiElement(STRING_LITERAL)('"yyy"')
                            PsiElement(RPAREN)(')')
                      PsiElement(SEMICOLON)(';')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('ZZZ')
                      TYPE_ARGUMENT_LIST
                        PsiElement(SMALLER_OP)('<')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('String')
                        PsiElement(LARGER_OP)('>')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    EXPRESSION_STATEMENT
                      EXPRESSION
                        INVOCATION_EXPRESSION
                          BASE_MEMBER_EXPRESSION
                            IDENTIFIER
                              PsiElement(LIDENTIFIER)('print')
                          POSITIONAL_ARGUMENT_LIST
                            PsiElement(LPAREN)('(')
                            SEQUENCED_ARGUMENT
                              LISTED_ARGUMENT
                                EXPRESSION
                                  STRING_LITERAL
                                    PsiElement(STRING_LITERAL)('"zzz"')
                            PsiElement(RPAREN)(')')
                      PsiElement(SEMICOLON)(';')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('WWW')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    EXPRESSION_STATEMENT
                      EXPRESSION
                        INVOCATION_EXPRESSION
                          BASE_MEMBER_EXPRESSION
                            IDENTIFIER
                              PsiElement(LIDENTIFIER)('print')
                          POSITIONAL_ARGUMENT_LIST
                            PsiElement(LPAREN)('(')
                            SEQUENCED_ARGUMENT
                              LISTED_ARGUMENT
                                EXPRESSION
                                  STRING_LITERAL
                                    PsiElement(STRING_LITERAL)('"www"')
                            PsiElement(RPAREN)(')')
                      PsiElement(SEMICOLON)(';')
                    PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('x')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('YYY')
                      TYPE_ARGUMENT_LIST
                        PsiElement(SMALLER_OP)('<')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('Integer')
                        PsiElement(LARGER_OP)('>')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    EXPRESSION_STATEMENT
                      EXPRESSION
                        INVOCATION_EXPRESSION
                          BASE_MEMBER_EXPRESSION
                            IDENTIFIER
                              PsiElement(LIDENTIFIER)('print')
                          POSITIONAL_ARGUMENT_LIST
                            PsiElement(LPAREN)('(')
                            SEQUENCED_ARGUMENT
                              LISTED_ARGUMENT
                                EXPRESSION
                                  STRING_LITERAL
                                    PsiElement(STRING_LITERAL)('"yyy"')
                            PsiElement(RPAREN)(')')
                      PsiElement(SEMICOLON)(';')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('ZZZ')
                      TYPE_ARGUMENT_LIST
                        PsiElement(SMALLER_OP)('<')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('String')
                        PsiElement(LARGER_OP)('>')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    EXPRESSION_STATEMENT
                      EXPRESSION
                        INVOCATION_EXPRESSION
                          BASE_MEMBER_EXPRESSION
                            IDENTIFIER
                              PsiElement(LIDENTIFIER)('print')
                          POSITIONAL_ARGUMENT_LIST
                            PsiElement(LPAREN)('(')
                            SEQUENCED_ARGUMENT
                              LISTED_ARGUMENT
                                EXPRESSION
                                  STRING_LITERAL
                                    PsiElement(STRING_LITERAL)('"zzz"')
                            PsiElement(RPAREN)(')')
                      PsiElement(SEMICOLON)(';')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('WWW')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    EXPRESSION_STATEMENT
                      EXPRESSION
                        INVOCATION_EXPRESSION
                          BASE_MEMBER_EXPRESSION
                            IDENTIFIER
                              PsiElement(LIDENTIFIER)('print')
                          POSITIONAL_ARGUMENT_LIST
                            PsiElement(LPAREN)('(')
                            SEQUENCED_ARGUMENT
                              LISTED_ARGUMENT
                                EXPRESSION
                                  STRING_LITERAL
                                    PsiElement(STRING_LITERAL)('"www"')
                            PsiElement(RPAREN)(')')
                      PsiElement(SEMICOLON)(';')
                    PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        BASE_TYPE
          IDENTIFIER
            PsiElement(UIDENTIFIER)('Integer')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('fib')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Integer')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('n')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                COMPARE_OP
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('n')
                  COMPARE_OP
                    PsiElement(COMPARE_OP)('<=>')
                  NATURAL_LITERAL
                    PsiElement(NATURAL_LITERAL)('0')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                MATCH_CASE
                  EXPRESSION_LIST
                    EXPRESSION
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('equal')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  RETURN
                    PsiElement(RETURN)('return')
                    EXPRESSION
                      NATURAL_LITERAL
                        PsiElement(NATURAL_LITERAL)('1')
                  PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                MATCH_CASE
                  EXPRESSION_LIST
                    EXPRESSION
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('larger')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  RETURN
                    PsiElement(RETURN)('return')
                    EXPRESSION
                      PRODUCT_OP
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('n')
                        PRODUCT_OP
                          PsiElement(PRODUCT_OP)('*')
                        INVOCATION_EXPRESSION
                          BASE_MEMBER_EXPRESSION
                            IDENTIFIER
                              PsiElement(LIDENTIFIER)('fib')
                          POSITIONAL_ARGUMENT_LIST
                            PsiElement(LPAREN)('(')
                            SEQUENCED_ARGUMENT
                              LISTED_ARGUMENT
                                EXPRESSION
                                  DIFFERENCE_OP
                                    BASE_MEMBER_EXPRESSION
                                      IDENTIFIER
                                        PsiElement(LIDENTIFIER)('n')
                                    DIFFERENCE_OP
                                      PsiElement(DIFFERENCE_OP)('-')
                                    NATURAL_LITERAL
                                      PsiElement(NATURAL_LITERAL)('1')
                            PsiElement(RPAREN)(')')
                  PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                MATCH_CASE
                  EXPRESSION_LIST
                    EXPRESSION
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('smaller')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  THROW
                    PsiElement(THROW)('throw')
                  PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    Interface Association
      ANNOTATION_LIST
        <empty list>
      Interface Association
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Association')
        CASE_TYPES
          PsiElement(CASE_TYPES)('of')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('OneToOne')
          PsiElement(UNION_OP)('|')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('OneToMany')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Interface OneTo
      ANNOTATION_LIST
        <empty list>
      Interface OneTo
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('OneTo')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Association')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class OneToOne
      ANNOTATION_LIST
        <empty list>
      Class OneToOne
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('OneToOne')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('OneTo')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class OneToMany
      ANNOTATION_LIST
        <empty list>
      Class OneToMany
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('OneToMany')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('OneTo')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    COMPILER_ANNOTATION
      PsiElement(COMPILER_ANNOTATION)('@')
      IDENTIFIER
        PsiElement(LIDENTIFIER)('error')
    Class Broken
      ANNOTATION_LIST
        <empty list>
      Class Broken
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Broken')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Association')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Interface Anything
      ANNOTATION_LIST
        <empty list>
      Interface Anything
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Anything')
        CASE_TYPES
          PsiElement(CASE_TYPES)('of')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('SomethingUsual')
          PsiElement(UNION_OP)('|')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('SomethingElse')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Interface SomethingUsual
      ANNOTATION_LIST
        <empty list>
      Interface SomethingUsual
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('SomethingUsual')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Anything')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              ANNOTATION
                IDENTIFIER
                  PsiElement(LIDENTIFIER)('shared')
              ANNOTATION
                IDENTIFIER
                  PsiElement(LIDENTIFIER)('formal')
            ATTRIBUTE_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('String')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('something')
              PsiElement(SEMICOLON)(';')
          PsiElement(RBRACE)('}')
    Interface SomethingElse
      ANNOTATION_LIST
        <empty list>
      Interface SomethingElse
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('SomethingElse')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Anything')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              ANNOTATION
                IDENTIFIER
                  PsiElement(LIDENTIFIER)('shared')
              ANNOTATION
                IDENTIFIER
                  PsiElement(LIDENTIFIER)('formal')
            ATTRIBUTE_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Object')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('somethingElse')
              PsiElement(SEMICOLON)(';')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('switchAnything')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Anything')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('any')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('any')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('SomethingUsual')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                STRING_LITERAL
                                  PsiElement(STRING_LITERAL)('"something"')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                QUALIFIED_MEMBER_EXPRESSION
                                  BASE_MEMBER_EXPRESSION
                                    IDENTIFIER
                                      PsiElement(LIDENTIFIER)('any')
                                  MEMBER_OP
                                    PsiElement(MEMBER_OP)('.')
                                  IDENTIFIER
                                    PsiElement(LIDENTIFIER)('something')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('SomethingElse')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                STRING_LITERAL
                                  PsiElement(STRING_LITERAL)('"something else"')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      INVOCATION_EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('print')
                        POSITIONAL_ARGUMENT_LIST
                          PsiElement(LPAREN)('(')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                QUALIFIED_MEMBER_EXPRESSION
                                  BASE_MEMBER_EXPRESSION
                                    IDENTIFIER
                                      PsiElement(LIDENTIFIER)('any')
                                  MEMBER_OP
                                    PsiElement(MEMBER_OP)('.')
                                  IDENTIFIER
                                    PsiElement(LIDENTIFIER)('somethingElse')
                          PsiElement(RPAREN)(')')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    Interface Interface
      ANNOTATION_LIST
        <empty list>
      Interface Interface
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Interface')
        CASE_TYPES
          PsiElement(CASE_TYPES)('of')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Class1')
          PsiElement(UNION_OP)('|')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Class2')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class Class1
      ANNOTATION_LIST
        ANNOTATION
          IDENTIFIER
            PsiElement(LIDENTIFIER)('abstract')
      Class Class1
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Class1')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        CASE_TYPES
          PsiElement(CASE_TYPES)('of')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Class3')
          PsiElement(UNION_OP)('|')
          IDENTIFIER
            PsiElement(LIDENTIFIER)('object1')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Interface')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class Class2
      ANNOTATION_LIST
        <empty list>
      Class Class2
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Class2')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Interface')
          PsiElement(INTERSECTION_OP)('&')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Sized')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              ANNOTATION
                IDENTIFIER
                  PsiElement(LIDENTIFIER)('shared')
              ANNOTATION
                IDENTIFIER
                  PsiElement(LIDENTIFIER)('actual')
            ATTRIBUTE_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Integer')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('size')
              SPECIFIER_EXPRESSION
                PsiElement(SPECIFY)('=')
                EXPRESSION
                  NATURAL_LITERAL
                    PsiElement(NATURAL_LITERAL)('1')
              PsiElement(SEMICOLON)(';')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              ANNOTATION
                IDENTIFIER
                  PsiElement(LIDENTIFIER)('shared')
              ANNOTATION
                IDENTIFIER
                  PsiElement(LIDENTIFIER)('actual')
            ATTRIBUTE_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Boolean')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('empty')
              SPECIFIER_EXPRESSION
                PsiElement(SPECIFY)('=')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('false')
              PsiElement(SEMICOLON)(';')
          PsiElement(RBRACE)('}')
    Class Class3
      ANNOTATION_LIST
        <empty list>
      Class Class3
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Class3')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        EXTENDED_TYPE
          PsiElement(EXTENDS)('extends')
          IDENTIFIER
            PsiElement(UIDENTIFIER)('Class1')
          POSITIONAL_ARGUMENT_LIST
            PsiElement(LPAREN)('(')
            PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    OBJECT_DEFINITION
      ANNOTATION_LIST
        <empty list>
      OBJECT_DEFINITION
        PsiElement(OBJECT_DEFINITION)('object')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('object1')
        EXTENDED_TYPE
          PsiElement(EXTENDS)('extends')
          IDENTIFIER
            PsiElement(UIDENTIFIER)('Class1')
          POSITIONAL_ARGUMENT_LIST
            PsiElement(LPAREN)('(')
            PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('switchInterface')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Interface')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('i')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          IF_STATEMENT
            IF_CLAUSE
              PsiElement(IF_CLAUSE)('if')
              CONDITION_LIST
                PsiElement(LPAREN)('(')
                IS_CONDITION
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Sized')
                  VARIABLE
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('i')
                PsiElement(RPAREN)(')')
              BLOCK
                PsiElement(LBRACE)('{')
                EXPRESSION_STATEMENT
                  COMPILER_ANNOTATION
                    PsiElement(COMPILER_ANNOTATION)('@')
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('type')
                  EXPRESSION_STATEMENT
                    EXPRESSION
                      TUPLE
                        TUPLE
                          PsiElement(LBRACKET)('[')
                          SEQUENCED_ARGUMENT
                            LISTED_ARGUMENT
                              EXPRESSION
                                STRING_LITERAL
                                  PsiElement(STRING_LITERAL)('"Interface&Sized"')
                          PsiElement(RBRACKET)(']')
                        PsiErrorElement:incorrect syntax: no viable alternative at token 'value'
                          <empty list>
                    PsiElement(VALUE_MODIFIER)('value')
                SPECIFIER_STATEMENT
                  EXPRESSION
                    ASSIGN_OP
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('ii')
                      ASSIGN_OP
                        PsiElement(SPECIFY)('=')
                      EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('i')
                  PsiElement(SEMICOLON)(';')
                EXPRESSION_STATEMENT
                  EXPRESSION
                    INVOCATION_EXPRESSION
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('print')
                      POSITIONAL_ARGUMENT_LIST
                        PsiElement(LPAREN)('(')
                        SEQUENCED_ARGUMENT
                          LISTED_ARGUMENT
                            EXPRESSION
                              QUALIFIED_MEMBER_EXPRESSION
                                BASE_MEMBER_EXPRESSION
                                  IDENTIFIER
                                    PsiElement(LIDENTIFIER)('i')
                                MEMBER_OP
                                  PsiElement(MEMBER_OP)('.')
                                IDENTIFIER
                                  PsiElement(LIDENTIFIER)('size')
                        PsiElement(RPAREN)(')')
                  PsiElement(SEMICOLON)(';')
                SWITCH_STATEMENT
                  SWITCH_CLAUSE
                    PsiElement(SWITCH_CLAUSE)('switch')
                    PsiElement(LPAREN)('(')
                    EXPRESSION
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('i')
                    PsiElement(RPAREN)(')')
                  SWITCH_CASE_LIST
                    CASE_CLAUSE
                      PsiElement(CASE_CLAUSE)('case')
                      PsiElement(LPAREN)('(')
                      IS_CASE
                        PsiElement(IS_OP)('is')
                        INTERSECTION_TYPE
                          BASE_TYPE
                            IDENTIFIER
                              PsiElement(UIDENTIFIER)('Class1')
                          PsiElement(INTERSECTION_OP)('&')
                          BASE_TYPE
                            IDENTIFIER
                              PsiElement(UIDENTIFIER)('Sized')
                      PsiElement(RPAREN)(')')
                      BLOCK
                        PsiElement(LBRACE)('{')
                        EXPRESSION_STATEMENT
                          EXPRESSION
                            INVOCATION_EXPRESSION
                              BASE_MEMBER_EXPRESSION
                                IDENTIFIER
                                  PsiElement(LIDENTIFIER)('print')
                              POSITIONAL_ARGUMENT_LIST
                                PsiElement(LPAREN)('(')
                                SEQUENCED_ARGUMENT
                                  LISTED_ARGUMENT
                                    EXPRESSION
                                      QUALIFIED_MEMBER_EXPRESSION
                                        BASE_MEMBER_EXPRESSION
                                          IDENTIFIER
                                            PsiElement(LIDENTIFIER)('i')
                                        MEMBER_OP
                                          PsiElement(MEMBER_OP)('.')
                                        IDENTIFIER
                                          PsiElement(LIDENTIFIER)('size')
                                PsiElement(RPAREN)(')')
                          PsiElement(SEMICOLON)(';')
                        PsiElement(RBRACE)('}')
                    CASE_CLAUSE
                      PsiElement(CASE_CLAUSE)('case')
                      PsiElement(LPAREN)('(')
                      IS_CASE
                        PsiElement(IS_OP)('is')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('Class2')
                      PsiElement(RPAREN)(')')
                      BLOCK
                        PsiElement(LBRACE)('{')
                        EXPRESSION_STATEMENT
                          EXPRESSION
                            INVOCATION_EXPRESSION
                              BASE_MEMBER_EXPRESSION
                                IDENTIFIER
                                  PsiElement(LIDENTIFIER)('print')
                              POSITIONAL_ARGUMENT_LIST
                                PsiElement(LPAREN)('(')
                                SEQUENCED_ARGUMENT
                                  LISTED_ARGUMENT
                                    EXPRESSION
                                      QUALIFIED_MEMBER_EXPRESSION
                                        BASE_MEMBER_EXPRESSION
                                          IDENTIFIER
                                            PsiElement(LIDENTIFIER)('i')
                                        MEMBER_OP
                                          PsiElement(MEMBER_OP)('.')
                                        IDENTIFIER
                                          PsiElement(LIDENTIFIER)('size')
                                PsiElement(RPAREN)(')')
                          PsiElement(SEMICOLON)(';')
                        PsiElement(RBRACE)('}')
                PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('i')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class1')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class2')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('i')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class1')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              ELSE_CLAUSE
                PsiElement(ELSE_CLAUSE)('else')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          PsiComment(LINE_COMMENT)('//@error \n')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('i')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class1')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class2')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              ELSE_CLAUSE
                PsiElement(ELSE_CLAUSE)('else')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('i')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Class1')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
          PsiComment(LINE_COMMENT)('//@error \n')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('i')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('String')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class1')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class2')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('i')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class3')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                MATCH_CASE
                  EXPRESSION_LIST
                    EXPRESSION
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('object1')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class2')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              <empty list>
            ATTRIBUTE_DECLARATION
              UNION_TYPE
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('Integer')
                PsiElement(UNION_OP)('|')
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('Float')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('num')
              SPECIFIER_EXPRESSION
                PsiElement(SPECIFY)('=')
                EXPRESSION
                  NATURAL_LITERAL
                    PsiElement(NATURAL_LITERAL)('1')
              PsiElement(SEMICOLON)(';')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('num')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Integer')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Float')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('num')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Integer')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Float')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('String')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('switchUnion1')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              UNION_TYPE
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('Class2')
                PsiElement(UNION_OP)('|')
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('Class3')
                PsiElement(UNION_OP)('|')
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('String')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('val')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('val')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class2')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class3')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('String')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('val')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class2')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              ELSE_CLAUSE
                PsiElement(ELSE_CLAUSE)('else')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('val')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Class2')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Class3')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('val')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Class2')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Class3')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('String')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Integer')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('switchUnion2')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              UNION_TYPE
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('Class1')
                PsiElement(UNION_OP)('|')
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('String')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('val')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('val')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Class3')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                MATCH_CASE
                  EXPRESSION_LIST
                    EXPRESSION
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('object1')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('String')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('val')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Class1')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  MATCH_CASE
                    EXPRESSION_LIST
                      EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('object1')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('String')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('val')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Class1')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Class3')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('String')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    COMPILER_ANNOTATION
      PsiElement(COMPILER_ANNOTATION)('@')
      IDENTIFIER
        PsiElement(LIDENTIFIER)('error')
    Class NonAbstract
      ANNOTATION_LIST
        <empty list>
      Class NonAbstract
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('NonAbstract')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        CASE_TYPES
          PsiElement(CASE_TYPES)('of')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('SubtypeOfNonAbstract')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class SubtypeOfNonAbstract
      ANNOTATION_LIST
        <empty list>
      Class SubtypeOfNonAbstract
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('SubtypeOfNonAbstract')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        EXTENDED_TYPE
          PsiElement(EXTENDS)('extends')
          IDENTIFIER
            PsiElement(UIDENTIFIER)('NonAbstract')
          POSITIONAL_ARGUMENT_LIST
            PsiElement(LPAREN)('(')
            PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    COMPILER_ANNOTATION
      PsiElement(COMPILER_ANNOTATION)('@')
      IDENTIFIER
        PsiElement(LIDENTIFIER)('error')
    Class Abstract
      ANNOTATION_LIST
        ANNOTATION
          IDENTIFIER
            PsiElement(LIDENTIFIER)('abstract')
      Class Abstract
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Abstract')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        CASE_TYPES
          PsiElement(CASE_TYPES)('of')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('NonSubtypeOfAbstract')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class NonSubtypeOfAbstract
      ANNOTATION_LIST
        <empty list>
      Class NonSubtypeOfAbstract
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('NonSubtypeOfAbstract')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    PsiComment(MULTI_COMMENT)('/*interface Indirect of Abstract1 | Abstract2 {}\nabstract class Abstract1() {}\nabstract class Abstract2() {}\nclass Concrete1() extends Abstract1() satisfies Indirect {}\nclass Concrete2() satisfies Indirect {}\nclass Concrete3() extends Abstract1() {}*/')
    Interface J1
      ANNOTATION_LIST
        <empty list>
      Interface J1
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('J1')
        CASE_TYPES
          PsiElement(CASE_TYPES)('of')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('J2')
          PsiElement(UNION_OP)('|')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('J3')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Interface J2
      ANNOTATION_LIST
        <empty list>
      Interface J2
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('J2')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('J1')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Interface J3
      ANNOTATION_LIST
        <empty list>
      Interface J3
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('J3')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('J1')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Interface J4
      ANNOTATION_LIST
        <empty list>
      Interface J4
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('J4')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('J1')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('testHardCase')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('J4')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('i')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('i')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('J2')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    COMPILER_ANNOTATION
                      PsiElement(COMPILER_ANNOTATION)('@')
                      IDENTIFIER
                        PsiElement(LIDENTIFIER)('type')
                    EXPRESSION_STATEMENT
                      EXPRESSION
                        TUPLE
                          TUPLE
                            PsiElement(LBRACKET)('[')
                            SEQUENCED_ARGUMENT
                              LISTED_ARGUMENT
                                EXPRESSION
                                  STRING_LITERAL
                                    PsiElement(STRING_LITERAL)('"J4&J2"')
                            PsiElement(RBRACKET)(']')
                          PsiErrorElement:incorrect syntax: no viable alternative at token 'value'
                            <empty list>
                      PsiElement(VALUE_MODIFIER)('value')
                  SPECIFIER_STATEMENT
                    EXPRESSION
                      ASSIGN_OP
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('ii')
                        ASSIGN_OP
                          PsiElement(SPECIFY)('=')
                        EXPRESSION
                          BASE_MEMBER_EXPRESSION
                            IDENTIFIER
                              PsiElement(LIDENTIFIER)('i')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('J3')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('i')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('J2')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('J3')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Nothing')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('i')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('J2')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('J3')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  MATCH_CASE
                    EXPRESSION_LIST
                      EXPRESSION
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('null')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              <empty list>
            ATTRIBUTE_DECLARATION
              OPTIONAL_TYPE
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('J4')
                PsiElement(OPTIONAL)('?')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('mi')
              SPECIFIER_EXPRESSION
                PsiElement(SPECIFY)('=')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('null')
              PsiElement(SEMICOLON)(';')
          SWITCH_STATEMENT
            COMPILER_ANNOTATION
              PsiElement(COMPILER_ANNOTATION)('@')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('error')
            SWITCH_STATEMENT
              SWITCH_CLAUSE
                PsiElement(SWITCH_CLAUSE)('switch')
                PsiElement(LPAREN)('(')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('mi')
                PsiElement(RPAREN)(')')
              SWITCH_CASE_LIST
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('J2')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
                CASE_CLAUSE
                  PsiElement(CASE_CLAUSE)('case')
                  PsiElement(LPAREN)('(')
                  IS_CASE
                    PsiElement(IS_OP)('is')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('J3')
                  PsiElement(RPAREN)(')')
                  BLOCK
                    PsiElement(LBRACE)('{')
                    PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('mi')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('J2')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('J3')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                MATCH_CASE
                  EXPRESSION_LIST
                    EXPRESSION
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('null')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('mi')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('J2')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  EXPRESSION_STATEMENT
                    COMPILER_ANNOTATION
                      PsiElement(COMPILER_ANNOTATION)('@')
                      IDENTIFIER
                        PsiElement(LIDENTIFIER)('type')
                    EXPRESSION_STATEMENT
                      EXPRESSION
                        TUPLE
                          TUPLE
                            PsiElement(LBRACKET)('[')
                            SEQUENCED_ARGUMENT
                              LISTED_ARGUMENT
                                EXPRESSION
                                  STRING_LITERAL
                                    PsiElement(STRING_LITERAL)('"J4&J2"')
                            PsiElement(RBRACKET)(']')
                          PsiErrorElement:incorrect syntax: no viable alternative at token 'value'
                            <empty list>
                      PsiElement(VALUE_MODIFIER)('value')
                  SPECIFIER_STATEMENT
                    EXPRESSION
                      ASSIGN_OP
                        BASE_MEMBER_EXPRESSION
                          IDENTIFIER
                            PsiElement(LIDENTIFIER)('ii')
                        ASSIGN_OP
                          PsiElement(SPECIFY)('=')
                        EXPRESSION
                          BASE_MEMBER_EXPRESSION
                            IDENTIFIER
                              PsiElement(LIDENTIFIER)('mi')
                    PsiElement(SEMICOLON)(';')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('J3')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Nothing')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    Interface Rsrc
      ANNOTATION_LIST
        <empty list>
      Interface Rsrc
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Rsrc')
        CASE_TYPES
          PsiElement(CASE_TYPES)('of')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('File')
          PsiElement(UNION_OP)('|')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Dir')
          PsiElement(UNION_OP)('|')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Link')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Interface File
      ANNOTATION_LIST
        <empty list>
      Interface File
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('File')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Rsrc')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Interface Dir
      ANNOTATION_LIST
        <empty list>
      Interface Dir
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Dir')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Rsrc')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Interface Link
      ANNOTATION_LIST
        <empty list>
      Interface Link
        PsiElement(INTERFACE_DEFINITION)('interface')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Link')
        SATISFIED_TYPES
          PsiElement(SATISFIES)('satisfies')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Rsrc')
        INTERFACE_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        <empty list>
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('use')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              <empty list>
            ATTRIBUTE_DECLARATION
              UNION_TYPE
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('File')
                PsiElement(UNION_OP)('|')
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('Link')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('x')
              SPECIFIER_EXPRESSION
                PsiElement(SPECIFY)('=')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('bottom')
              PsiElement(SEMICOLON)(';')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('x')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('File')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Link')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              <empty list>
            ATTRIBUTE_DECLARATION
              UNION_TYPE
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('File')
                PsiElement(UNION_OP)('|')
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('Dir')
                PsiElement(UNION_OP)('|')
                BASE_TYPE
                  IDENTIFIER
                    PsiElement(UIDENTIFIER)('Link')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('y')
              SPECIFIER_EXPRESSION
                PsiElement(SPECIFY)('=')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('bottom')
              PsiElement(SEMICOLON)(';')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('y')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  UNION_TYPE
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('File')
                    PsiElement(UNION_OP)('|')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Dir')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Link')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          ATTRIBUTE_DECLARATION
            ANNOTATION_LIST
              <empty list>
            ATTRIBUTE_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Rsrc')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('z')
              SPECIFIER_EXPRESSION
                PsiElement(SPECIFY)('=')
                EXPRESSION
                  BASE_MEMBER_EXPRESSION
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('bottom')
              PsiElement(SEMICOLON)(';')
          IF_STATEMENT
            IF_CLAUSE
              PsiElement(IF_CLAUSE)('if')
              CONDITION_LIST
                PsiElement(LPAREN)('(')
                IS_CONDITION
                  PsiElement(IS_OP)('is')
                  UNION_TYPE
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('File')
                    PsiElement(UNION_OP)('|')
                    BASE_TYPE
                      IDENTIFIER
                        PsiElement(UIDENTIFIER)('Dir')
                  VARIABLE
                    IDENTIFIER
                      PsiElement(LIDENTIFIER)('z')
                PsiElement(RPAREN)(')')
              BLOCK
                PsiElement(LBRACE)('{')
                SWITCH_STATEMENT
                  SWITCH_CLAUSE
                    PsiElement(SWITCH_CLAUSE)('switch')
                    PsiElement(LPAREN)('(')
                    EXPRESSION
                      BASE_MEMBER_EXPRESSION
                        IDENTIFIER
                          PsiElement(LIDENTIFIER)('z')
                    PsiElement(RPAREN)(')')
                  SWITCH_CASE_LIST
                    CASE_CLAUSE
                      PsiElement(CASE_CLAUSE)('case')
                      PsiElement(LPAREN)('(')
                      IS_CASE
                        PsiElement(IS_OP)('is')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('File')
                      PsiElement(RPAREN)(')')
                      BLOCK
                        PsiElement(LBRACE)('{')
                        PsiElement(RBRACE)('}')
                    CASE_CLAUSE
                      PsiElement(CASE_CLAUSE)('case')
                      PsiElement(LPAREN)('(')
                      IS_CASE
                        PsiElement(IS_OP)('is')
                        BASE_TYPE
                          IDENTIFIER
                            PsiElement(UIDENTIFIER)('Dir')
                      PsiElement(RPAREN)(')')
                      BLOCK
                        PsiElement(LBRACE)('{')
                        PsiElement(RBRACE)('}')
                PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')
    Class Status
      ANNOTATION_LIST
        ANNOTATION
          IDENTIFIER
            PsiElement(LIDENTIFIER)('shared')
        ANNOTATION
          IDENTIFIER
            PsiElement(LIDENTIFIER)('abstract')
      Class Status
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Status')
        TYPE_PARAMETER_LIST
          PsiElement(SMALLER_OP)('<')
          TYPE_PARAMETER_DECLARATION
            TYPE_VARIANCE
              PsiElement(OUT)('out')
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Failure')
          PsiElement(LARGER_OP)('>')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        CASE_TYPES
          PsiElement(CASE_TYPES)('of')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Failed')
            TYPE_ARGUMENT_LIST
              PsiElement(SMALLER_OP)('<')
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Failure')
              PsiElement(LARGER_OP)('>')
          PsiElement(UNION_OP)('|')
          BASE_TYPE
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Succeeded')
            TYPE_ARGUMENT_LIST
              PsiElement(SMALLER_OP)('<')
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Failure')
              PsiElement(LARGER_OP)('>')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class Failed
      ANNOTATION_LIST
        ANNOTATION
          IDENTIFIER
            PsiElement(LIDENTIFIER)('shared')
      Class Failed
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Failed')
        TYPE_PARAMETER_LIST
          PsiElement(SMALLER_OP)('<')
          TYPE_PARAMETER_DECLARATION
            TYPE_VARIANCE
              PsiElement(OUT)('out')
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Failure')
          PsiElement(LARGER_OP)('>')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        EXTENDED_TYPE
          PsiElement(EXTENDS)('extends')
          IDENTIFIER
            PsiElement(UIDENTIFIER)('Status')
          TYPE_ARGUMENT_LIST
            PsiElement(SMALLER_OP)('<')
            BASE_TYPE
              IDENTIFIER
                PsiElement(UIDENTIFIER)('Failure')
            PsiElement(LARGER_OP)('>')
          POSITIONAL_ARGUMENT_LIST
            PsiElement(LPAREN)('(')
            PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    Class Succeeded
      ANNOTATION_LIST
        ANNOTATION
          IDENTIFIER
            PsiElement(LIDENTIFIER)('shared')
      Class Succeeded
        PsiElement(CLASS_DEFINITION)('class')
        IDENTIFIER
          PsiElement(UIDENTIFIER)('Succeeded')
        TYPE_PARAMETER_LIST
          PsiElement(SMALLER_OP)('<')
          TYPE_PARAMETER_DECLARATION
            TYPE_VARIANCE
              PsiElement(OUT)('out')
            IDENTIFIER
              PsiElement(UIDENTIFIER)('Failure')
          PsiElement(LARGER_OP)('>')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          PsiElement(RPAREN)(')')
        EXTENDED_TYPE
          PsiElement(EXTENDS)('extends')
          IDENTIFIER
            PsiElement(UIDENTIFIER)('Status')
          TYPE_ARGUMENT_LIST
            PsiElement(SMALLER_OP)('<')
            BASE_TYPE
              IDENTIFIER
                PsiElement(UIDENTIFIER)('Failure')
            PsiElement(LARGER_OP)('>')
          POSITIONAL_ARGUMENT_LIST
            PsiElement(LPAREN)('(')
            PsiElement(RPAREN)(')')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
    METHOD_DEFINITION
      ANNOTATION_LIST
        ANNOTATION
          IDENTIFIER
            PsiElement(LIDENTIFIER)('shared')
      METHOD_DEFINITION
        PsiElement(VOID_MODIFIER)('void')
        IDENTIFIER
          PsiElement(LIDENTIFIER)('case2')
        PARAMETER_LIST
          PsiElement(LPAREN)('(')
          VALUE_PARAMETER_DECLARATION
            ANNOTATION_LIST
              <empty list>
            VALUE_PARAMETER_DECLARATION
              BASE_TYPE
                IDENTIFIER
                  PsiElement(UIDENTIFIER)('Status')
                TYPE_ARGUMENT_LIST
                  PsiElement(SMALLER_OP)('<')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('String')
                  PsiElement(LARGER_OP)('>')
              IDENTIFIER
                PsiElement(LIDENTIFIER)('arg')
          PsiElement(RPAREN)(')')
        BLOCK
          PsiElement(LBRACE)('{')
          SWITCH_STATEMENT
            SWITCH_CLAUSE
              PsiElement(SWITCH_CLAUSE)('switch')
              PsiElement(LPAREN)('(')
              EXPRESSION
                BASE_MEMBER_EXPRESSION
                  IDENTIFIER
                    PsiElement(LIDENTIFIER)('arg')
              PsiElement(RPAREN)(')')
            SWITCH_CASE_LIST
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Failed')
                    TYPE_ARGUMENT_LIST
                      PsiElement(SMALLER_OP)('<')
                      BASE_TYPE
                        IDENTIFIER
                          PsiElement(UIDENTIFIER)('Void')
                      PsiElement(LARGER_OP)('>')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
              CASE_CLAUSE
                PsiElement(CASE_CLAUSE)('case')
                PsiElement(LPAREN)('(')
                IS_CASE
                  PsiElement(IS_OP)('is')
                  BASE_TYPE
                    IDENTIFIER
                      PsiElement(UIDENTIFIER)('Succeeded')
                    TYPE_ARGUMENT_LIST
                      PsiElement(SMALLER_OP)('<')
                      BASE_TYPE
                        IDENTIFIER
                          PsiElement(UIDENTIFIER)('Void')
                      PsiElement(LARGER_OP)('>')
                PsiElement(RPAREN)(')')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiElement(RBRACE)('}')
          PsiElement(RBRACE)('}')